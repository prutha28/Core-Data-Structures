<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="fixed.size.stacks.of.strings.Stack"/>
<fullyQualifiedTypeName name="javax.swing.text.AbstractDocument.BranchElement"/>
<fullyQualifiedTypeName name="applications.using.stacks.BracketCheck"/>
<fullyQualifiedTypeName name="insertion.sort.InsertionSort"/>
<fullyQualifiedTypeName name="java.lang.String"/>
<fullyQualifiedTypeName name="arrays.sorted.EmptyArrayException"/>
<fullyQualifiedTypeName name="arrays.sorted.SortedArray"/>
<fullyQualifiedTypeName name="java.lang.ArrayIndexOutOfBoundsException"/>
<fullyQualifiedTypeName name="queues.using.arrays.Queue"/>
<fullyQualifiedTypeName name="java.util.EmptyStackException"/>
<fullyQualifiedTypeName name="queues.using.fixed.circular.arrays.QueueFullException"/>
<fullyQualifiedTypeName name="stacks.using.linked.lists.Stack"/>
<fullyQualifiedTypeName name="dynamic.arrays.DynamicArray"/>
<fullyQualifiedTypeName name="linked.lists.Node"/>
<fullyQualifiedTypeName name="linked.lists.LinkedListUtils"/>
<fullyQualifiedTypeName name="linked.lists.LinkedList"/>
<fullyQualifiedTypeName name="maximumContiguousSum.MaximumContiguousSum"/>
<fullyQualifiedTypeName name="counting.sort.CountSort"/>
<fullyQualifiedTypeName name="Panagram"/>
<fullyQualifiedTypeName name="java.lang.Character"/>
<fullyQualifiedTypeName name="arrays.unsorted.Array"/>
<fullyQualifiedTypeName name="set.ElementNotInsertedException"/>
<fullyQualifiedTypeName name="java.util.NoSuchElementException"/>
<fullyQualifiedTypeName name="set.Set"/>
<fullyQualifiedTypeName name="set.SetUtils"/>
<fullyQualifiedTypeName name="javax.print.attribute.standard.MediaSize.Other"/>
<fullyQualifiedTypeName name="binary.trees.IBinaryTree"/>
<fullyQualifiedTypeName name="hackerRank.IndexToRemoveToMakePalindrome"/>
<fullyQualifiedTypeName name="hackerrank.zappos.MakePalindrome"/>
<fullyQualifiedTypeName name="java.util.Collection"/>
<fullyQualifiedTypeName name="java.io.BufferedWriter"/>
<fullyQualifiedTypeName name="java.io.IOException"/>
<fullyQualifiedTypeName name="java.io.FileWriter"/>
<fullyQualifiedTypeName name="java.lang.NullPointerException"/>
<fullyQualifiedTypeName name="hackerrank.zappos.TestThread"/>
<fullyQualifiedTypeName name="hackerrank.zappos.DBConnection"/>
<fullyQualifiedTypeName name="java.lang.AutoCloseable"/>
<fullyQualifiedTypeName name="java.lang.Exception"/>
<fullyQualifiedTypeName name="java.lang.IllegalArgumentException"/>
<fullyQualifiedTypeName name="hackerrank.zappos.MyEnum"/>
<fullyQualifiedTypeName name="hackerrank.zappos.EnumTest"/>
<fullyQualifiedTypeName name="hackerrank.zappos.MyClass"/>
<fullyQualifiedTypeName name="javax.crypto.spec.PSource"/>
<fullyQualifiedTypeName name="java.util.Arrays"/>
<fullyQualifiedTypeName name="hackerrank.inf.Q1"/>
<fullyQualifiedTypeName name="java.lang.Thread"/>
<fullyQualifiedTypeName name="java.util.Map"/>
<fullyQualifiedTypeName name="javax.swing.text.html.HTMLDocument.Iterator"/>
<fullyQualifiedTypeName name="java.util.Map.Entry"/>
<fullyQualifiedTypeName name="java.util.SortedSet"/>
<fullyQualifiedTypeName name="java.util.TreeSet"/>
<fullyQualifiedTypeName name="hashing.using.arrays.IHash"/>
<fullyQualifiedTypeName name="binary.search.trees.IBinarySearchTree"/>
<fullyQualifiedTypeName name="java.util.Set"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="java.util.ArrayList"/>
<fullyQualifiedTypeName name="java.lang.Integer"/>
<fullyQualifiedTypeName name="java.util.HashSet"/>
<fullyQualifiedTypeName name="java.util.Scanner"/>
<fullyQualifiedTypeName name="java.util.HashMap"/>
</qualifiedTypeNameHistroy>
