package hackerrank.inf;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import javax.swing.text.html.HTMLDocument.Iterator;

public class Q2 {

	static long minarea(int[] x, int[] y, int k) {

		// X & y are pairs of coordinates

		// Algo : 
		// 1. Store teh ordered pair of coordinates in a map
		// 2. FInd a pair of corrdinates for which difference in their y coordinates = difference in their x coordinates
		//  AND difference = K+1


		if( x.length != y.length)
			return -1 ;


		List<Integer> xDiff = new ArrayList<Integer>() ;
		List<Integer> yDiff = new ArrayList<Integer>() ;
		int xDif = 0 ;
		int yDif = 0 ;
		
		for (int i = 0; i < x.length-1; i++) {
			for (int j = i+1; j < x.length; j++) {

				xDif = Math.abs(x[j] - x[i]) ;
				xDiff.add(xDif) ;
				
				yDif = Math.abs(y[j] - y[i]);
				yDiff.add(yDif) ;

				if( xDif == yDif){
					
				}
			}
		}

		for (int j = 1; j < y.length; j++) {

		}













//		Map<Integer,Integer> coordinates = new HashMap<Integer,Integer>() ;
//
//		for (int i = 0; i < x.length; i++) {
//			coordinates.put(x[i], y[i]) ;
//		}
//
//		List<Integer> differences = new ArrayList<Integer>() ;
//
//		java.util.Iterator<Entry<Integer, Integer>> itr = coordinates.entrySet().iterator() ;
//
//		Entry<Integer, Integer> init = new Entry<Integer, Integer>() {
//
//			public Integer setValue(Integer value) {
//				return 0;
//			}
//
//			public Integer getValue() {
//				return 0;
//			}
//
//			public Integer getKey() {
//				return 0;
//			}
//		} ;
//		Entry<Integer, Integer> c ;
//
//		while( itr.hasNext()){
//			c = itr.next() ;
//			if( Math.abs(c.getKey() - init.getKey()) == Math.abs(c.getValue()-init.getValue())){
//
//			}
//		}
	}


	public static void main(String[] args) {

	}

}
