package Strings;

import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.LinkedHashSet;
import java.util.List;

public class StringCompression {

	public static void main(String[] args) {

		String s = "aaabbbbccad" ;
//		String result = 
				compress(s) ;
		
//		if( result.length() < s.length() ){
//			System.out.println(result);
//		}else{
//			System.out.println(s);
//		}
	}

	private static void compress(String s) {
//		
//		int letter[] = new int[128] ;
//		List<Integer> ascii = new ArrayList<Integer>() ;
//		List<Character> characters = new ArrayList<Character>() ;
//		
//		for( char c : s.toCharArray()){
//			int val = c ;
//			characters.add(c) ;
//			ascii.add(val) ;
//			letter[val] += 1;
//		}

		LinkedHashMap<Character, Integer> characterCounts = new LinkedHashMap<Character, Integer>() ;
		
		for (int i = 0; i < s.length(); i++) {
			char current = s.charAt(i) ;
			if( characterCounts.get(current) == null)
				characterCounts.put(s.charAt(i), 1) ;
			else{
				int currentcount = characterCounts.get(current)  ;
				characterCounts.put(s.charAt(i), 1 + currentcount) ;
			}
		}
		System.out.println(characterCounts);
		
	}

}
